version: '3'
services:

  mypig-eureka-server:
    #build:
      # context: ./microservice/springboot-eureka-server
      # dockerfile: Dockerfile
      # args:
      #   ARG_JAR_FILE: ${PWD}/target/forsrc-mypig-microservice-springboot-eureka-server-0.0.1-SNAPSHOT.jar
      #   ARG_RES_FILE: ${PWD}/src/main/resources
      #   ARG_PORT: 11100
    image: forsrc/forsrc-mypig-microservice-springboot-eureka-server:latest
    container_name: mypig-eureka-server
    hostname: mypig-eureka-server
    # depends_on:
    ports:
    - 11100:11100
    # environment:

  mypig-admin-server:
    #build:
      # context: ./microservice/springboot-admin
      # dockerfile: Dockerfile
      # args:
      #   ARG_JAR_FILE: ${PWD}/target/forsrc-mypig-microservice-springboot-admin-0.0.1-SNAPSHOT.jar
      #   ARG_RES_FILE: ${PWD}/src/main/resources
      #   ARG_PORT: 13000
    image: forsrc/forsrc-mypig-microservice-springboot-admin:latest
    container_name: mypig-admin-server
    hostname: mypig-admin-server
    ports:
    - 13000:13000
    # environment:

  mypig-zipkin-server:
    #build:
      # context: ./microservice/springboot-zipkin-server
      # dockerfile: Dockerfile
      # args:
      #   ARG_JAR_FILE: ${PWD}/target/forsrc-mypig-microservice-springboot-zipkin-server-0.0.1-SNAPSHOT.jar
      #   ARG_RES_FILE: ${PWD}/src/main/resources
      #   ARG_PORT: 11110
    image: forsrc/forsrc-mypig-microservice-springboot-zipkin-server:latest
    container_name: mypig-zipkin-server
    hostname: mypig-zipkin-server
    ports:
    - 11110:11110
    # environment:

  mypig-config-server:
    #build:
      # context: ./microservice/springboot-config-server
      # dockerfile: Dockerfile
      # args:
      #   ARG_JAR_FILE: ${PWD}/target/forsrc-mypig-microservice-springboot-config-server-0.0.1-SNAPSHOT.jar
      #   ARG_RES_FILE: ${PWD}/src/main/resources
      #   ARG_PORT: 12000
    image: forsrc/forsrc-mypig-microservice-springboot-config-server:latest
    container_name: mypig-config-server
    hostname: mypig-config-server
    ports:
    - 12000:12000
    # environment:

  mypig-sso-server:
    #build:
      # context: ./microservice/springboot-sso-server
      # dockerfile: Dockerfile
      # args:
      #   ARG_JAR_FILE: ${PWD}/target/forsrc-mypig-microservice-springboot-sso-server-0.0.1-SNAPSHOT.jar
      #   ARG_RES_FILE: ${PWD}/src/main/resources
      #   ARG_PORT: 10000
    image: forsrc/forsrc-mypig-microservice-springboot-sso-server:latest
    container_name: mypig-sso-server
    hostname: mypig-sso-server
    ports:
    - 10000:10000
    environment:
    - JAVA_OPTS=-Dspring.thymeleaf.prefix=file:config/templates/

  mypig-api-gateway:
    #build:
      # context: ./microservice/springboot-api-gateway
      # dockerfile: Dockerfile
      # args:
      #   ARG_JAR_FILE: ${PWD}/target/forsrc-mypig-microservice-springboot-api-gateway-0.0.1-SNAPSHOT.jar
      #   ARG_RES_FILE: ${PWD}/src/main/resources
      #   ARG_PORT: 8088
    image: forsrc/forsrc-mypig-microservice-springboot-api-gateway:latest
    container_name: mypig-api-gateway-server
    hostname: mypig-api-gateway-server
    ports:
    - 8088:8088
    # environment:

  mypig-tcc:
    #build:
      # context: ./microservice/tcc
      # dockerfile: Dockerfile
      # args:
      #   ARG_JAR_FILE: ${PWD}/target/forsrc-mypig-microservice-tcc-0.0.1-SNAPSHOT.jar
      #   ARG_RES_FILE: ${PWD}/src/main/resources
      #   ARG_PORT: 10020
    image: forsrc/forsrc-mypig-microservice-tcc:latest
    container_name: mypig-tcc
    hostname: mypig-tcc
    ports:
    - 10020:10020
    # environment:
  redis:
    image: redis:3.2
    container_name: mypig-redis
    hostname: mypig-redis
    #volumes:
    #- /tmp/redis/data:/data
    ports:
    - "6379:6379"

networks:
  forsrc.mypig:
    driver: bridge
