
spring:
  application:
    name: springboot-sso-server
  cloud:
    config:
      uri: ${CONFIG_SERVER:http://forsrc.local:12000/config}
  boot:
    admin:
      url: ${ADMIN_SERVER:http://forsrc.local:13000}
  datasource:
    url:               ${DB_URL:jdbc:h2:/tmp/db/h2/sso.h2;AUTO_SERVER=TRUE;MODE=MYSQL;}
    username:          ${DB_USERNAME:sa}
    password:          ${DB_PASSWORD:sa}
    driver-class-name: ${DB_DRIVER:org.h2.Driver}
    schema:
    - classpath:schema.sql
    data:
    - classpath:data.sql
  jpa:
    database-platform: ${DB_DIALECT:org.hibernate.dialect.H2Dialect}
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
  aop:
    proxy-target-class: true

  cache:
    type: redis
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
  thymeleaf:
    prefix: 'classpath:public/mypig/www/'
    suffix: .html
    cache: false

  zipkin:
    service:
      name:   ${spring.application.name}
    enabled:  true
    base-url: ${ZIPKIN_SERVER:http://forsrc.local:11110}

security:
  oauth2:
    #sso:
      #filter-order: 3
    authorization:
      token-key-access: permitAll()
    client:
      access-token-uri:       ${SSO_SERVER:http://forsrc.local:10000}/sso/oauth/token
      user-authorization-uri: ${SSO_SERVER:http://forsrc.local:10000}/sso/oauth/authorize
      client-id:              sso
      client-secret:          forsrc
      scope:                  read, write
    resource:
      filter-order:           3
      userInfoUri:            /me
      preferTokenInfo:        false
      id:                     forsrc
      token-info-uri:         /oauth/check_token
management:
  context-path: /mgmt
  security:
    enabled: false

server:
  port: 10000
  context-path: /sso

feign:
  hystrix:
    enabled: true
ribbon:
  ReadTimeout:    10000
  ConnectTimeout:  2000
hystrix:
  command:
    default:
      execution.isolation.thread.timeoutInMilliseconds: 10000


eureka:
  instance:
    host:                    http://forsrc.local:${server.port}
    home-page-url:           ${HOST_NAME:${eureka.instance.host}}${server.context-path}
    health-check-url:        ${HOST_NAME:${eureka.instance.host}}${server.context-path}/mgmt/health
    secure-health-check-url: ${HOST_NAME:${eureka.instance.host}}${server.context-path}/mgmt/health
    status-page-url:         ${HOST_NAME:${eureka.instance.host}}${server.context-path}/mgmt/info
  client:
    serviceUrl:
      defaultZone:           ${EUREKA_SERVER:http://forsrc.local:11100/eureka}

tcc:
  ws: ${TCC_WS:ws://forsrc.local:10020/tcc/ws/tcc}
