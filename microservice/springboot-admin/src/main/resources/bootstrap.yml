spring:
  application:
    name: springboot-admin
  cloud:
    config:
      enabled:     false
      uri:         ${CONFIG_SERVER:http://forsrc.local:12000/config}
  security:
    user:
      name:        forsrc@gmail.com
      password:    forsrc
  boot:
#    admin:
#       url:         ${ADMIN_SERVER:http://forsrc.local:13000}${server.context-path}
#       routes:
#         endpoints: env,metrics,dump,jolokia,info,configprops,trace,logfile,refresh,flyway,liquibase,heapdump,loggers,auditevents,hystrix.stream
#       turbine:
#         clusters:  default
#         location:  SPRINGBOOT-ADMIN
#         enabled:   true
#       username:    forsrc@gmail.com
#       password:    forsrc
#       client:
#         metadata:
#           user.name:     forsrc@gmail.com
#           user.password: forsrc
    admin:
      client:
        url:                ${ADMIN_SERVER:http://forsrc.local:13000}
        username:           forsrc@gmail.com
        password:           forsrc
        instance:
          service-base-url: ${ADMIN_SERVER:http://forsrc.local:13000}
          metadata:
            user.name:      forsrc@gmail.com
            user.password:  forsrc
  aop:
    proxy-target-class: true

turbine:
#  aggregator:
#    cluster-config:
#    - SPRINGBOOT-ADMIN
  clusterNameExpression: metadata['cluster']
  appConfig:             SPRINGBOOT-ADMIN
  combineHostPort:       true
  instanceUrlSuffix:     ${server.servlet..context-path}/hystrix.stream

ribbon:
  eureka:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

security:
  oauth2:
    client:
      access-token-uri:       ${SSO_SERVER:http://forsrc.local:10000}/sso/oauth/token
      user-authorization-uri: ${SSO_SERVER:http://forsrc.local:10000}/sso/oauth/authorize
      client-id:              forsrc
      client-secret:          forsrc
      scope:                  read, write
    resource:
      userInfoUri:            ${SSO_SERVER:http://forsrc.local:10000}/sso/me
      preferTokenInfo:        true
      id:                     forsrc
      token-info-uri:         ${SSO_SERVER:http://forsrc.local:10000}/sso/oauth/check_token

server:
  port: 13000
  servlet:
    context-path: /


# eureka:
#   instance:
#     host:                      http://forsrc.local:${server.port}
#     home-page-url:             ${HOST_NAME:${eureka.instance.host}}
#     health-check-url:          ${HOST_NAME:${eureka.instance.host}}${server.servlet.context-path}/mgmt/health
#     secure-health-check-url:   ${HOST_NAME:${eureka.instance.host}}${server.servlet.context-path}/mgmt/health
#     status-page-url:           ${HOST_NAME:${eureka.instance.host}}${server.servlet.context-path}/mgmt/info
#     metadata-map:
#       cluster: MAIN
#       management.context-path: ${management.context-path}
#   client:
#     serviceUrl:
#       defaultZone:             ${EUREKA_SERVER:http://forsrc.local:11100/eureka}
