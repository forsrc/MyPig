<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.forsrc.tcc.dao.mapper.TccMapper">

    <resultMap id="resultMap" type="com.forsrc.tcc.domain.entity.Tcc">
        <id property="id" column="id" typeHandler="com.forsrc.common.core.mybatis.handler.UUIDTypeHandler"/>
        <result property="id" column="id" typeHandler="com.forsrc.common.core.mybatis.handler.UUIDTypeHandler"/>
        <result property="expire" column="expire" />
        <result property="create" column="create" />
        <result property="update" column="update" />
        <result property="status" column="status" />
        <collection property="links"
            javaType="ArrayList"
            ofType="com.forsrc.tcc.domain.entity.TccLink"
            column="links_tcc_id"
            typeHandler="com.forsrc.common.core.mybatis.handler.UUIDTypeHandler">

            <result property="tccId" column="links_tcc_id" typeHandler="com.forsrc.common.core.mybatis.handler.UUIDTypeHandler"/>
            <result property="id" column="links_id" typeHandler="com.forsrc.common.core.mybatis.handler.UUIDTypeHandler"/>
            <result property="uri" column="links_uri" />
            <result property="path" column="links_path" />
            <result property="expire" column="links_expire" />
            <result property="create" column="links_create" />
            <result property="update" column="links_update" />
            <result property="status" column="links_status" />
        </collection>
    </resultMap>

    <select id="getTryStatusList" resultType="com.forsrc.tcc.domain.entity.Tcc"
        resultMap="resultMap">
        SELECT
            TCC.*,
            TCC_LINK.tcc_id    AS links_tcc_id,
            TCC_LINK.id        AS links_id,
            TCC_LINK.uri       AS links_uri,
            TCC_LINK.path      AS links_path,
            TCC_LINK.expire    AS links_expire,
            TCC_LINK.create    AS links_create,
            TCC_LINK.update    AS links_update,
            TCC_LINK.status    AS links_status
        FROM
            t_tcc TCC
        LEFT JOIN
            t_tcc_link TCC_LINK
        ON
            TCC.status = 0
        AND
            TCC.id = TCC_LINK.tcc_id
        -- AND
            -- NOW() >= TIMESTAMPADD(MINUTE, 1, TCC.create)
        ORDER BY "create" ASC
        LIMIT 100
    </select>

    <select id="getTryStatusListByMicroservice" resultType="com.forsrc.tcc.domain.entity.Tcc"
        resultMap="resultMap">
        SELECT
            TCC.*,
            TCC_LINK.tcc_id    AS links_tcc_id,
            TCC_LINK.id        AS links_id,
            TCC_LINK.uri       AS links_uri,
            TCC_LINK.path      AS links_path,
            TCC_LINK.expire    AS links_expire,
            TCC_LINK.create    AS links_create,
            TCC_LINK.update    AS links_update,
            TCC_LINK.status    AS links_status
        FROM
            t_tcc TCC
        LEFT JOIN
            t_tcc_link TCC_LINK
        ON
            microservice = #{microservice, jdbcType=VARCHAR}
        AND
            TCC.status = 0
        AND
            TCC.id = TCC_LINK.tcc_id
        -- AND
            -- NOW() >= TIMESTAMPADD(MINUTE, 1, TCC.create)
        ORDER BY "create" ASC
        LIMIT 100
    </select>

    <select id="getByTccLinkPath" resultType="com.forsrc.tcc.domain.entity.Tcc"
        resultMap="resultMap">
        SELECT
            TCC.*,
            TCC_LINK.tcc_id    AS links_tcc_id,
            TCC_LINK.id        AS links_id,
            TCC_LINK.uri       AS links_uri,
            TCC_LINK.path      AS links_path,
            TCC_LINK.expire    AS links_expire,
            TCC_LINK.create    AS links_create,
            TCC_LINK.update    AS links_update,
            TCC_LINK.status    AS links_status
        FROM
            t_tcc TCC
        LEFT JOIN
            t_tcc_link TCC_LINK
        ON
            TCC_LINK.path = #{path, jdbcType=VARCHAR}
        AND
            TCC.id = TCC_LINK.tcc_id
        ORDER BY "create" DESC
        LIMIT 1
    </select>

    <update id="updateStatus" parameterType="com.forsrc.tcc.domain.entity.Tcc">
        UPDATE
            t_tcc
        SET
            status = #{tcc.status, jdbcType=INTEGER},
            version = version + 1,
            update = CURRENT_TIMESTAMP
        WHERE
            id = #{tcc.id, javaType=java.util.UUID, typeHandler=com.forsrc.common.core.mybatis.handler.UUIDTypeHandler}
        AND
            version = #{tcc.version, jdbcType=INTEGER}
    </update>

    <update id="setTccMicroservice">
        <![CDATA[
        WITH T_FOR_UPDATE as (
            SELECT
                id
            FROM
                t_tcc
            WHERE
                status = 0
            AND
                version = 0
            AND
                microservice = ''
            LIMIT 100
            FOR UPDATE
        )
        UPDATE
            t_tcc TCC
        SET
            microservice = #{microservice, jdbcType=VARCHAR},
            version = version + 1,
            update = CURRENT_TIMESTAMP
        FROM
            T_FOR_UPDATE
        WHERE
            TCC.id = T_FOR_UPDATE.id;
        ]]>
    </update>

</mapper>
